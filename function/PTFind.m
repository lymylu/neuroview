function [PTLocs, ErrorCode, ErrorMessage] = PTFind(InputData, Thresholds)% Function to find peaks (maximums) amd troughs (minimums) via the% 3 point method%% CDopyright 2021 BY Steve Lutes%% Usage:%	For a basic peak and trough detector, use the syntax%		[PTLocs, ErrorCode, ErrorMessage] = PTFind(InputData)%	For a more sophisicated peak and trough detector, use the syntax %		[PTLocs, ErrorCode, ErrorMessage] = PTFind(InputData, Thresholds)%%-------Inputs----------------------------------------------------------------%%	InputData- A row vector (1 by N) or column vector (N by 1) holding the data%			   you want to analyze%%	Thresholds- a 4 by 1 on 1 by 4 vector holding the detection tresholds. See%				the documentation for more information on tresholds. Organized%				like this:%							[ PLET PTET TLET TTET]%%						Where:%%							PLET is the peak leading edge threshold,%							PTET is the peak trailing edge threshold,%							TLET is the trough leading edge threshold,%							TTET is the trough trailing edge threshold,%%-------Outputs--------------------------------------------------------------%%	PTLocs- An 2 by N array holding the peak and trough locations organzied %			like this:%				%			Location of 1st peak or trough (index)          Location of 2nd peak or trough (index)%			%			Peak/Trough flag (= 1 if peak, = 0  if trough)   Peak/Trough flag (= 1 if peak, = 0  if trough)%			Location of 3rd peak or terough (index)        ...........   Location of 3rd peak or trough (index)%			Peak/Trough flag (= 1 if peak, = 0  if trough) ........... 	 Peak/Trough flag (= 1 if peak, = 0  if trough)%			Location of 3rd peak or trough (index)..................... Location of Nth peak or trough (index)%% 	ErrorCode - A scalar indicating if there has been an error. = 0 means no errors, = 1 means there has been an error%%	ErrorMessage- A text string decribing the errorErrorCode = 0;Counter = 0;ErrorMessage = 'No errors';% Start the error trap sectionif nargin == 2	% Start section for testing thresholds input		Rows = size(Thresholds,1); % Get the number of rows	Cols = size(Thresholds,2); % Get the number of columns			if Rows == 1 & Cols == 1				% User has entered single nunber for thresholds				Temp ='You have entered single number for the thresholds. Please enter data in a row vector (1 by 4) or';		ErrorMessage = [Temp ' column vector (4 by 1).'];		ErrorMessage		ErrorCode = 1;		return		% works 7/29/21			elseif Rows > 1 & Cols > 1				% User has entered a matrix for thresholds				Temp ='You have entered a matrix for the thresholds. Please enter data in a row vector (1 by 4) or';		ErrorMessage = [Temp ' column vector (4 by 1).'];		ErrorMessage		ErrorCode = 1;		return		% works 7/29/21				elseif (Rows == 1 & Cols ~= 4) | (Rows ~= 4 & Cols == 1) 			% User has entered something other than a 1 by 4 or 4 by 1 matrix		Temp ='You have entered something other than a 1 by 4 or 4 by 1 matrix for the thresholds. Please enter thresholds in a row vector (1 by 4) or';		ErrorMessage = [Temp ' column vector (4 by 1).'];		ErrorMessage		ErrorCode = 1;		% works 7/29/21		return				endend% End section for testing thresholds input% Start section for testing input dataRows = size(InputData,1); % Get the number of rowsCols = size(InputData,2); % Get the number of columnsif Rows == 1 & Cols == 1		% User has entered a single number for input data		Temp ='You have entered a single number for the input data. Please enter data in a row vector (1 by N) or';	ErrorMessage = [Temp ' column vector (N by 1).'];	ErrorMessage	ErrorCode = 1;	% Ok 7/30/21elseif Rows > 1 & Cols > 1	% User has entered a matrix for the input data		Temp ='You have entered a matrix for the input data. Please enter data in a row vector (1 by N) or';	ErrorMessage = [Temp ' column vector (N by 1).'];	ErrorMessage	ErrorCode = 1;	return	% Ok 7/30/21endif nargin == 1		Thresholds = [ 0 0 0 0];end	% End section for testing input data% End the error trap section% Start code for locatiing peaks and troughs% Start loop to select a triplet from InputDatafor a = 3:1:length(InputData)		% Start code for peak and trough detection		% Start code for peak detection	if (InputData(a-2) - InputData(a-1) < Thresholds(1)) & (InputData(a) - InputData(a-1) < Thresholds(2))				% Peak detected				Counter = Counter + 1; % Increment index for PTLocs		PTLocs(1, Counter) = a-1; % Store the peak location		PTLocs(2, Counter) = 1; % Set the peak/trough flag to 1			% End code for peak detection		% Start code for trough detection	elseif (InputData(a-2) - InputData(a-1) > Thresholds(3)) & (InputData(a) - InputData(a-1) > Thresholds(4))				% Trough detected				Counter = Counter + 1; % Increment index for PTLocs		PTLocs(1, Counter) = a-1; % Store the trough location		PTLocs(2, Counter) = 0; % Set the peak/trough flag to 0				% End code for trough detection		end	% End code for peak and trough detectionend% End loop to select a triplet from InputData% End code for locatiing peaks and troughs